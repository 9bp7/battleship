[{"/home/billy/Documents/the_odin_project/battleship/src/index.js":"1","/home/billy/Documents/the_odin_project/battleship/src/App.js":"2","/home/billy/Documents/the_odin_project/battleship/src/game/player.js":"3","/home/billy/Documents/the_odin_project/battleship/src/game/gameboard.js":"4","/home/billy/Documents/the_odin_project/battleship/src/game/ship.js":"5","/home/billy/Documents/the_odin_project/battleship/src/components/GameDisplayRouter.js":"6","/home/billy/Documents/the_odin_project/battleship/src/components/splash/SplashText.js":"7","/home/billy/Documents/the_odin_project/battleship/src/components/splash/SplashInput.js":"8","/home/billy/Documents/the_odin_project/battleship/src/components/GameDisplayVsAI.js":"9","/home/billy/Documents/the_odin_project/battleship/src/components/boards/BoardPlacingShips.js":"10","/home/billy/Documents/the_odin_project/battleship/src/components/boards/BoardPlayer.js":"11","/home/billy/Documents/the_odin_project/battleship/src/components/boards/BoardEnemy.js":"12","/home/billy/Documents/the_odin_project/battleship/src/components/boards/BoardTile.js":"13","/home/billy/Documents/the_odin_project/battleship/src/components/GameLoopVsAI.js":"14","/home/billy/Documents/the_odin_project/battleship/src/components/BoatPlacer.js":"15","/home/billy/Documents/the_odin_project/battleship/src/game/getRandomNumber.js":"16"},{"size":241,"mtime":1610734162011,"results":"17","hashOfConfig":"18"},{"size":2488,"mtime":1610796585931,"results":"19","hashOfConfig":"18"},{"size":4264,"mtime":1610748918323,"results":"20","hashOfConfig":"18"},{"size":3382,"mtime":1610743506966,"results":"21","hashOfConfig":"18"},{"size":1040,"mtime":1610734162011,"results":"22","hashOfConfig":"18"},{"size":925,"mtime":1610796511874,"results":"23","hashOfConfig":"18"},{"size":473,"mtime":1610795621691,"results":"24","hashOfConfig":"18"},{"size":564,"mtime":1610795627450,"results":"25","hashOfConfig":"18"},{"size":984,"mtime":1610796601085,"results":"26","hashOfConfig":"18"},{"size":3844,"mtime":1610795904601,"results":"27","hashOfConfig":"18"},{"size":1328,"mtime":1610795808978,"results":"28","hashOfConfig":"18"},{"size":2204,"mtime":1610795812790,"results":"29","hashOfConfig":"18"},{"size":1297,"mtime":1610795926286,"results":"30","hashOfConfig":"18"},{"size":5705,"mtime":1610800133031,"results":"31","hashOfConfig":"18"},{"size":2029,"mtime":1610796460516,"results":"32","hashOfConfig":"18"},{"size":102,"mtime":1610798312325,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"15dj2ll",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/billy/Documents/the_odin_project/battleship/src/index.js",[],["68","69"],"/home/billy/Documents/the_odin_project/battleship/src/App.js",["70","71"],"/home/billy/Documents/the_odin_project/battleship/src/game/player.js",["72","73"],"import {Gameboard} from './gameboard';\n\nconst Player = (name, boardSize) => {\n  const gameboard = Gameboard(boardSize);\n\n  const getName = () => {\n    return name;\n  }\n\n  const getGameboard = () => {\n    return gameboard;\n  }\n\n  return { gameboard, getName, getGameboard};\n}\n\nconst HumanPlayer = (name, boardSize) => {\n  const prototype = Player(name, boardSize);\n\n  return Object.assign(\n    {}, \n    prototype, \n    {}\n  )\n}\n\nconst ComputerPlayer = (name, boardSize) => {\n  const prototype = Player(name, boardSize);\n  let lastSuccessfulX = null;\n  let lastSuccessfulY = null;\n\n  let successfulCoordinates = [];\n\n  const getRandomArbitrary = (min, max) => {\n    return Math.random() * (max - min) + min;\n  }  \n\n  const fillGameboard = (shipsToFillWith) => {\n    let i = 0;\n    while(i < shipsToFillWith.length) {\n      let axis = (getRandomArbitrary(0, 50) > 24 ? 'x' : 'y');\n      let randomX = +(getRandomArbitrary(0, boardSize).toFixed(0));\n      let randomY = +(getRandomArbitrary(0, boardSize).toFixed(0));\n      console.log(randomX +' '+ randomY+' '+axis);\n      try {\n        if(prototype.gameboard.positionIsLegal(randomX, randomY, axis, shipsToFillWith[i].length)) {\n          console.log('position is legal');\n          prototype.gameboard.placeShip(randomX, randomY, axis, shipsToFillWith[i].length, shipsToFillWith[i].name);\n          i++;\n        }\n      } catch(e) {\n        console.log(e);\n      }\n    }\n  }\n\n  function shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }\n\n  const makeRandomAttack = (gameboardToAttack) => {\n    console.log('Attempting random attack...');\n\n    let coordsAreInvalid = true;\n    let randomX = 0;\n    let randomY = 0;\n    do {\n      randomX = +(getRandomArbitrary(0, boardSize).toFixed(0));\n      randomY = +(getRandomArbitrary(0, boardSize).toFixed(0));\n      try {\n        if(gameboardToAttack.canReceiveAttack(randomX, randomY)) {\n          gameboardToAttack.receiveAttack(randomX, randomY);\n          if(gameboardToAttack.getTile(randomX, randomY).isOccupied()) {\n            successfulCoordinates.push({x: randomX, y: randomY});\n          }\n          coordsAreInvalid = false;\n        }\n      } catch {\n        \n      }\n      \n    } while(coordsAreInvalid);\n\n    return {\n      x: randomX,\n      y: randomY\n    }\n  }\n\n  const makeCalculatedAttack = (gameboardToAttack) => {\n    console.log('Attempting calculated attack...');\n\n    for(let j = 0; j < successfulCoordinates.length; j++) {\n      let coordsToTry = shuffle([\n        {x: successfulCoordinates[j].x + 1, y: successfulCoordinates[j].y    },\n        {x: successfulCoordinates[j].x - 1, y: successfulCoordinates[j].y    },\n        {x: successfulCoordinates[j].x,     y: successfulCoordinates[j].y + 1},\n        {x: successfulCoordinates[j].x,     y: successfulCoordinates[j].y - 1},\n      ]);\n\n      for(let i = 0; i < (coordsToTry.length / 2); i++) {\n        if(gameboardToAttack.canReceiveAttack(coordsToTry[i].x, coordsToTry[i].y)) {\n          gameboardToAttack.receiveAttack(coordsToTry[i].x, coordsToTry[i].y);\n          if(gameboardToAttack.getTile(coordsToTry[i].x, coordsToTry[i].y).isOccupied()) {\n            successfulCoordinates.push({x: coordsToTry[i].x, y: coordsToTry[i].y});\n          }\n  \n          return {\n            x: coordsToTry[i].x,\n            y: coordsToTry[i].y\n          };\n        }\n      }\n    }\n\n    return makeRandomAttack(gameboardToAttack);\n  }\n\n  const attackGameboard = (gameboardToAttack) => {\n    let coords = {};\n    if(successfulCoordinates.length > 0) {\n      coords = makeCalculatedAttack(gameboardToAttack);      \n    } else {\n      coords = makeRandomAttack(gameboardToAttack);\n    }\n    return coords;\n  }\n\n  return Object.assign(\n    {}, \n    prototype, \n    { attackGameboard, fillGameboard }\n  )\n}\n\nexport { Player, HumanPlayer, ComputerPlayer }","/home/billy/Documents/the_odin_project/battleship/src/game/gameboard.js",[],"/home/billy/Documents/the_odin_project/battleship/src/game/ship.js",[],"/home/billy/Documents/the_odin_project/battleship/src/components/GameDisplayRouter.js",["74"],"/home/billy/Documents/the_odin_project/battleship/src/components/splash/SplashText.js",[],"/home/billy/Documents/the_odin_project/battleship/src/components/splash/SplashInput.js",[],"/home/billy/Documents/the_odin_project/battleship/src/components/GameDisplayVsAI.js",["75","76"],"/home/billy/Documents/the_odin_project/battleship/src/components/boards/BoardPlacingShips.js",["77","78"],"/home/billy/Documents/the_odin_project/battleship/src/components/boards/BoardPlayer.js",["79","80","81","82"],"/home/billy/Documents/the_odin_project/battleship/src/components/boards/BoardEnemy.js",["83","84"],"/home/billy/Documents/the_odin_project/battleship/src/components/boards/BoardTile.js",["85","86","87"],"/home/billy/Documents/the_odin_project/battleship/src/components/GameLoopVsAI.js",["88"],"/home/billy/Documents/the_odin_project/battleship/src/components/BoatPlacer.js",["89","90","91"],"/home/billy/Documents/the_odin_project/battleship/src/game/getRandomNumber.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":11,"column":10,"nodeType":"98","messageId":"99","endLine":11,"endColumn":23},{"ruleId":"100","severity":1,"message":"101","line":26,"column":3,"nodeType":"102","messageId":"103","endLine":62,"endColumn":4},{"ruleId":"96","severity":1,"message":"104","line":29,"column":7,"nodeType":"98","messageId":"99","endLine":29,"endColumn":22},{"ruleId":"96","severity":1,"message":"105","line":30,"column":7,"nodeType":"98","messageId":"99","endLine":30,"endColumn":22},{"ruleId":"96","severity":1,"message":"106","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":24},{"ruleId":"107","severity":1,"message":"108","line":11,"column":6,"nodeType":"109","endLine":11,"endColumn":8,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":23,"column":5,"nodeType":"113","messageId":"114","endLine":24,"endColumn":13},{"ruleId":"107","severity":1,"message":"115","line":12,"column":6,"nodeType":"109","endLine":12,"endColumn":8,"suggestions":"116"},{"ruleId":"107","severity":1,"message":"115","line":16,"column":6,"nodeType":"109","endLine":16,"endColumn":37,"suggestions":"117"},{"ruleId":"96","severity":1,"message":"118","line":7,"column":8,"nodeType":"98","messageId":"99","endLine":7,"endColumn":14},{"ruleId":"96","severity":1,"message":"119","line":7,"column":16,"nodeType":"98","messageId":"99","endLine":7,"endColumn":25},{"ruleId":"107","severity":1,"message":"115","line":12,"column":6,"nodeType":"109","endLine":12,"endColumn":8,"suggestions":"120"},{"ruleId":"107","severity":1,"message":"115","line":16,"column":6,"nodeType":"109","endLine":16,"endColumn":23,"suggestions":"121"},{"ruleId":"107","severity":1,"message":"115","line":12,"column":6,"nodeType":"109","endLine":12,"endColumn":8,"suggestions":"122"},{"ruleId":"107","severity":1,"message":"115","line":16,"column":6,"nodeType":"109","endLine":16,"endColumn":31,"suggestions":"123"},{"ruleId":"96","severity":1,"message":"106","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":30,"column":44,"nodeType":"126","endLine":30,"endColumn":83},{"ruleId":"124","severity":1,"message":"125","line":31,"column":45,"nodeType":"126","endLine":31,"endColumn":80},{"ruleId":"107","severity":1,"message":"127","line":62,"column":6,"nodeType":"109","endLine":62,"endColumn":23,"suggestions":"128"},{"ruleId":"96","severity":1,"message":"129","line":9,"column":7,"nodeType":"98","messageId":"99","endLine":9,"endColumn":25},{"ruleId":"107","severity":1,"message":"130","line":19,"column":6,"nodeType":"109","endLine":19,"endColumn":8,"suggestions":"131"},{"ruleId":"107","severity":1,"message":"132","line":38,"column":6,"nodeType":"109","endLine":38,"endColumn":21,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'playerTwoName' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'lastSuccessfulX' is assigned a value but never used.","'lastSuccessfulY' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.boats' and 'props.playerTwo'. Either include them or remove the dependency array.","ArrayExpression",["136"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","React Hook useEffect has a missing dependency: 'redrawBoard'. Either include it or remove the dependency array.",["137"],["138"],"'placed' is assigned a value but never used.","'setPlaced' is assigned a value but never used.",["139"],["140"],["141"],["142"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'addTextToLog', 'enemyConsecutiveMisses', 'gameFinished', 'props.playerOne', and 'props.playerTwo'. Either include them or remove the dependency array. You can also do a functional update 'setEnemyConsecutiveMisses(e => ...)' if you only need 'enemyConsecutiveMisses' in the 'setEnemyConsecutiveMisses' call.",["143"],"'spaceEventListener' is defined but never used.","React Hook useEffect has missing dependencies: 'handleSpaceKey' and 'props.boats'. Either include them or remove the dependency array.",["144"],"React Hook useEffect has a missing dependency: 'handleSpaceKey'. Either include it or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"148","fix":"152"},{"desc":"153","fix":"154"},{"desc":"148","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [props.boats, props.playerTwo]",{"range":"164","text":"165"},"Update the dependencies array to be: [redrawBoard]",{"range":"166","text":"167"},"Update the dependencies array to be: [placed, props.placingShipAxis, redrawBoard]",{"range":"168","text":"169"},{"range":"170","text":"167"},"Update the dependencies array to be: [props.isEnabled, redrawBoard]",{"range":"171","text":"172"},{"range":"173","text":"167"},"Update the dependencies array to be: [placed, props.isEnabled, redrawBoard]",{"range":"174","text":"175"},"Update the dependencies array to be: [addTextToLog, enemyConsecutiveMisses, gameFinished, playerAttacking, props.playerOne, props.playerTwo]",{"range":"176","text":"177"},"Update the dependencies array to be: [handleSpaceKey, props.boats]",{"range":"178","text":"179"},"Update the dependencies array to be: [eventListener, handleSpaceKey]",{"range":"180","text":"181"},[320,322],"[props.boats, props.playerTwo]",[308,310],"[redrawBoard]",[357,388],"[placed, props.placingShipAxis, redrawBoard]",[302,304],[351,368],"[props.isEnabled, redrawBoard]",[302,304],[351,376],"[placed, props.isEnabled, redrawBoard]",[3197,3214],"[addTextToLog, enemyConsecutiveMisses, gameFinished, playerAttacking, props.playerOne, props.playerTwo]",[572,574],"[handleSpaceKey, props.boats]",[999,1014],"[eventListener, handleSpaceKey]"]